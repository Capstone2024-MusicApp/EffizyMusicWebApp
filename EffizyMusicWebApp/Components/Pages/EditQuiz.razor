@page "/quiz/edit/{quizId:int}"
@using MusicWebApi.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Edit Quiz</h3>
<hr />
<EditForm Model="@model" OnValidSubmit="UpdateQuiz" FormName="editquiz">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Quiz Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="model.QuizTitle" />
        </div>
        <ValidationMessage For="@(() => model.QuizTitle)" />
    </div>
    <div class="mb-3">
        <label class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="model.Description"></InputText>
        </div>
        <ValidationMessage For="@(() => model.Description)" />
    </div>
    <input type="hidden" @bind-value="model.Id" name="model.Id" />
    <input type="hidden" @bind-value="model.ModuleId" name="model.ModuleId" />
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <a class="btn btn-light" href="/quizes/@model.ModuleId">
            Cancel
        </a> 
    </div>
</EditForm>

@code {
    [Parameter]
    public int quizId { get; set; }

    [SupplyParameterFromForm]
    protected Quiz model { get; set; }

    protected override void OnInitialized() => model ??= new();

    protected override async Task OnParametersSetAsync()
    {
        if (model.Id == 0 && model.ModuleId == 0)
        {
            string apiUrl = "https://localhost:7164/api/Quiz/GetQuizById/" + quizId;
            model = await Http.GetFromJsonAsync<Quiz>(apiUrl);
        }
    }

    protected async Task UpdateQuiz()
    {
        if (!string.IsNullOrEmpty(model.QuizTitle) && !string.IsNullOrEmpty(model.Description))
        {
            string apiUrl = "https://localhost:7164/api/Quiz";
            var response = await Http.PutAsJsonAsync(apiUrl, model);
           
            Cancel();
        }
    }

     public void Cancel()
     {
        NavigationManager.NavigateTo("/quizes/" + model.ModuleId);
     }
}
