@page "/courses"
@using EffizyMusicSystem.Models
@using EffizyMusicSystem.Services
@using EffizyMusicSystem.DAL
@inject ICourseService CourseService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="container">
    <h1>Courses</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Course Code</th>
                <th>Description</th>
                <th>Instrument ID</th>
                <th>Instructor ID</th>
                <th>Skill Level</th>
                <th>Estimated Time</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in CourseList)
            {
                <tr>
                    <td>@course.Title</td>
                    <td>@course.CourseCode</td>
                    <td>@course.CourseDescription</td>
                    <td>@course.InstrumentID</td>
                    <td>@course.InstructorID</td>
                    <td>@course.SkillLevel</td>
                    <td>@course.EstimatedTime</td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="()=>EditCourse(course.CourseID)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="()=>DeleteCourse(course.CourseID)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {

    List<Course> CourseList = new List<Course>();

    protected override async Task OnInitializedAsync()
    {
        CourseList = await CourseService.GetCoursesAsync();
    }

    private void EditCourse(int id)
    {
        NavigationManager.NavigateTo($"/editcourse/{id}", true);
    }

    private async Task DeleteCourse(int id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this course with ID: {id}?");

        if (confirmed)
        {
            await CourseService.DeleteCourseAsync(id);
            CourseList = await CourseService.GetCoursesAsync();
        }
    }
}
