@page "/paymenthistory/"
@using EffizyMusicSystem.Models
@inject EffizyMusicSystem.Services.EffizyMusicApplicationService EffizyService
@using EffizyMusicSystem.Utils
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavService
<h3>Payment History</h3>
@if (model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>Payment ID</th>
                <th>Payment Method</th>
                <th>Date</th>
                <th>Amount</th>
                <th>Billing Address</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @if (model == null || model.Count == 0)
            {
                <tr>
                    <td colspan="3">No record found.</td>
                </tr>
            }

            @if (model != null)
            {
                foreach (var entity in GetItemsOnCurrentPage())
                {
                    <tr>
                        <td>@entity.PaymentID</td>
                        <td>@entity.PaymentMethod</td>
                        <td>@entity.PaymentDate.ToShortDateString()</td>
                        <td>@entity.Amount</td>
                        <td>@entity.BillingAddress</td>
                        @if (entity.PaymentStatus.ToLower() == "Completed".ToLower())
                        {
                            <td><span class="btn btn-success">@entity.PaymentStatus</span></td>
                        }
                        else if (entity.PaymentStatus.ToLower() == "Cancelled".ToLower())
                        {
                            <td><span class="btn btn-danger">@entity.PaymentStatus</span></td>
                        }
                        else if (entity.PaymentStatus.ToLower() == "Pending".ToLower())
                        {
                            <td><span class="btn btn-dark">@entity.PaymentStatus</span></td>
                        }
                        else
                        {
                            <td>@entity.PaymentStatus</td>
                        }
                    </tr>
                }
            }

        </tbody>
    </table>
}
<PaginationComponent CurrentPage="@cp"
                     TotalPages="@TotalPages"
                     onPageChange="@HandlePageChange" />
@code {
    protected List<Payment> model = new();
    private int pageSize = 4;
    private int cp = 1;
    private int TotalPages => (int)Math.Ceiling((double)model.Count / pageSize);
    protected override async Task OnInitializedAsync()
    {
        User user = (await ProtectedSessionStore.GetAsync<User>("User")).Value ?? new User();
        if (user.UserID == 0 || user.UserTypeID == Constants.UserType_Instructor)
            NavService.NavigateTo("/NotAuthorize/");
        else if (user.UserTypeID == Constants.UserType_Student)
            model = EffizyService.GetUserPayments(user.UserID);
        else
            model = EffizyService.GetPayments();

    }
    private IEnumerable<Payment> GetItemsOnCurrentPage()
    {
        int startIndex = (cp - 1) * pageSize;
        return model.Skip(startIndex).Take(pageSize);
    }

    private void HandlePageChange(int newPage)
    {
        cp = newPage;
    }
}
@code {
}

