@page "/admin/view-instructors"
@using EffizyMusicSystem.Models
@using EffizyMusicSystem.Services
@using Microsoft.AspNetCore.Components
@using EffizyMusicSystem.Utils
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IInstructorService InstructorService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<h3>All Instructors</h3>

@if (Instructors != null && Instructors.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Gender</th>
                <th>Phone</th>
                <th>Location</th>
                <th>Status</th>
                <th>Instrument</th>
                <th>Years of Experience</th>
                <th>Reference Email</th>
                <th>Reference Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var instructor in Instructors)
            {
                <tr>
                    <td>@instructor.FirstName</td>
                    <td>@instructor.LastName</td>
                    <td>@instructor.Gender</td>
                    <td>@instructor.Phone</td>
                    <td>@instructor.Location</td>
                    <td>@instructor.Status</td>
                    <td>@(instructor.Instrument != null ? instructor.Instrument.InstrumentType : "N/A")</td>
                    <td>@instructor.YearsOfExperience</td>
                    <td>@instructor.ReferenceEmail</td>
                    <td>@instructor.ReferencePhone</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No instructors found.</p>
}

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@code {
    private List<Instructor> Instructors { get; set; }
    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User user = ((await ProtectedSessionStore.GetAsync<User>("User")).Value ?? new User());
        if (user.UserID == 0 || user.UserTypeID == Constants.UserType_Student)
        {
            NavigationManager.NavigateTo("/NotAuthorize/");
        }
        await LoadInstructors();
    }

    private async Task LoadInstructors()
    {
        Instructors = await InstructorService.GetAllInstructorsAsync();
    }
}
