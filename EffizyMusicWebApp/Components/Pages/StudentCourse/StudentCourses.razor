@page "/StudentCourse/StudentCourses"
@using EffizyMusicSystem.Models
@using EffizyMusicSystem.Models.DTO
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject ProtectedSessionStorage ProtectedSessionStore
@inject EffizyMusicSystem.Services.EffizyMusicApplicationService EffizyService

@inject ILogger<StudentCourses> Logger

<div class="container">
<h2>Courses</h2>
<br />
@if (availablecourses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="main-student-course">
        <h3>Your Enrolled Courses</h3>
        <br />
        @if (enrolledCourses == null)
        {
            <p><em>No enrolled courses.</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Course Code</th>
                        <th>Progress</th>
                        <th>Access</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var course in enrolledCourses)
                    {
                        <tr>
                            <td>@course.Title</td>
                            <td>@course.CourseDescription</td>
                            <td>@course.CourseCode</td>
                            <td>@course.CompletedLessons of @course.TotalLessons</td>
                            <td><a href="\StudentCourse\AccessCourse\@course.EnrollmentID">Access Course</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @*  <PaginationComponent CurrentPage="@cp"
    TotalPages="@TotalPagesEnrolledCourse"
    onPageChange="@HandlePageChange" /> *@
        <br />
        <br />
        <br />
        <h3>Available Courses</h3>
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Course Code</th>
                    <th>View</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in availablecourses)
                {
                    <tr>
                        <td>@course.Title</td>
                        <td>@course.CourseDescription</td>
                        <td>@course.CourseCode</td>
                        <td><a href="">View Course</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
@* <PaginationComponent CurrentPage="@cp"
                     TotalPages="@TotalPagesCourse"
                     onPageChange="@HandlePageChange" /> *@

</div>
@code {
    private List<Course>? availablecourses;
    private List<StudentCourseDTO>? enrolledCourses;

    private int pageSize = 4;
    private int cp = 1;
    // private int TotalPagesCourse => (int)Math.Ceiling((double)availablecourses.Count / pageSize);
    // private int TotalPagesEnrolledCourse => (int)Math.Ceiling((double)enrolledCourses.Count / pageSize);
    private User user = new User();


    protected override async Task OnInitializedAsync()
    {
        availablecourses = await EffizyService.GetCourses();

        user = ((await ProtectedSessionStore.GetAsync<User>("User")).Value ?? new User());

        if (String.IsNullOrEmpty(user.UserID.ToString()))
        {
            Logger.LogWarning("Student Course being accessed but no login detected.");
        }
        else
        {
            enrolledCourses = await EffizyService.GetEnrolledCourses(user.UserID);
        }
    }
    private IEnumerable<Course> GetCoursesOnCurrentPage()
    {
        int startIndex = (cp - 1) * pageSize;
        return availablecourses.Skip(startIndex).Take(pageSize);
    }
    private IEnumerable<StudentCourseDTO> GetEnrolledOnCurrentPage()
    {
        int startIndex = (cp - 1) * pageSize;
        return enrolledCourses.Skip(startIndex).Take(pageSize);
    }

    private void HandlePageChange(int newPage)
    {
        cp = newPage;
    }


}
