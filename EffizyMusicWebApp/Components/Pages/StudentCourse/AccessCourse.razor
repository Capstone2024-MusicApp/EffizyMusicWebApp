@page "/StudentCourse/AccessCourse/{EnrollmentID:int}"
@using EffizyMusicSystem.Models
@using EffizyMusicSystem.Models.DTO
@using EffizyMusicSystem.Utils

@inject EffizyMusicSystem.Services.EffizyMusicApplicationService EffizyService
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer


<script>
    function loadVideo() {
        document.getElementById("videoTagId").load();
    }
</script>

<br />

<div class="access-course-main">
    <h1 class="course-title">@studentCourse.Title</h1>
    <label style="text-align: center; margin: auto; display: block;"> @studentCourse.CourseDescription</label>
    <br />
    <br />
    <div class="lesson-frame">
        @if (DisplayLesson)
        {


            <label class="video-lesson-title">@selectedModule.Title - @selectedLesson.Title </label>
            <br />
            @if (selectedLesson.LessonContent != null)
            {
                var base64 = Convert.ToBase64String(selectedLesson.LessonContent);
                var src = $"data:video/mp4;base64,{base64}";

                <video controls="controls" height="600px" id="videoTagId">
                    <source src="@src" type="video/mp4" />
                </video>
            }
            else
            {
                <video controls="controls" height="600px" id="videoTagId">
                </video>
            }
            <br />
            <br />
        }
        else
        {
            <label class="video-lesson-title">Quiz - @selectedQuiz.QuizTitle</label>
            <br />
            <br />
            int questionNumber = 1;
            @foreach (var question in quesionnaire)
            {

                <label>@questionNumber. @question.questionText</label>
                <br />
                <InputRadioGroup Name="selectedQuiz" @bind-Value="@testString">
                    @foreach (var choice in question.questionChoices)
                    {
                        <InputRadio @bind-Value="choice.ChoiceText" />  <label> - @choice.ChoiceText</label>
                        <br />
                    }
                </InputRadioGroup>

                <br />
                questionNumber++;
            }

        }
    </div>


    <div class="module-list">
        <Accordion AlwaysOpen="false">
            @foreach (var module in studentCourse.Modules)
            {
                @if (module.ModuleID == selectedModule.ModuleID)
                {
                    <AccordionItem IsActive="true">
                        <TitleTemplate>
                            <Icon Name="IconName.MusicNote" Class="me-1" />
                            <b>@module.Title</b>
                        </TitleTemplate>
                        <Content>
                            @foreach (var lesson in module.Lessons)
                            {
                                string progressStatus;
                                LessonProgress lessonProgress = new LessonProgress();
                                lessonProgress = studentCourse.LessonProgress.Where(x => x.LessonID == lesson.LessonNumber).FirstOrDefault() ?? new LessonProgress();
                                progressStatus = lessonProgress.ProgressStatus ?? Constants.ProgressStatus_NotStarted;

                                <div style="margin-bottom: 8px;">
                                    @if (selectedLesson.LessonNumber == lesson.LessonNumber)
                                    {

                                        <Button class="accordion-item  lesson-list-for-module" Style="background-color: #eeeeee;" @onclick="() => UpdateLesson(lesson)">
                                            @lesson.Title - <i>@progressStatus</i>
                                        </Button>
                                    }
                                    else
                                    {
                                        <Button Class="accordion-item lesson-list-for-module" @onclick="() => UpdateLesson(lesson)">@lesson.Title - <i>@progressStatus</i> </Button>
                                    }
                                </div>
                            }
                            @foreach (var quiz in module.Quizzes)
                            {
                                <div style="margin-bottom: 5px;">
                                    <Button Class="accordion-item lesson-list-for-module" @onclick="() => selectQuiz(quiz)"><i>Quiz</i> - @quiz.QuizTitle</Button>

                                    </div>
                            }
                        </Content>
                    </AccordionItem>
                }
                else
                {
                    <AccordionItem>
                        <TitleTemplate>
                            <Icon Name="IconName.MusicNote" Class="me-1" />
                            <b>@module.Title</b>
                        </TitleTemplate>
                        <Content>
                            @foreach (var lesson in module.Lessons)
                            {

                                string progressStatus;
                                LessonProgress lessonProgress = new LessonProgress();
                                lessonProgress = studentCourse.LessonProgress.Where(x => x.LessonID == lesson.LessonNumber).FirstOrDefault() ?? new LessonProgress();
                                progressStatus = lessonProgress.ProgressStatus ?? Constants.ProgressStatus_NotStarted;
                                
                                <div style="margin-bottom: 8px;">
                                    @if (selectedLesson.LessonNumber == lesson.LessonNumber)
                                    {

                                        <Button class="accordion-item  lesson-list-for-module" Style="background-color: #eeeeee;" @onclick="() => UpdateLesson(lesson)">
                                            @lesson.Title - <i>progressStatus</i>
                                        </Button>
                                    }
                                    else
                                    {
                                        <Button Class="accordion-item lesson-list-for-module" @onclick="() => UpdateLesson(lesson)">@lesson.Title - <i>@progressStatus</i> </Button>
                                    }
                                </div>

                            }
                            @foreach (var quiz in module.Quizzes)
                            {
                                <div style="margin-bottom: 5px;">
                                    <Button Class="accordion-item lesson-list-for-module" @onclick="() => selectQuiz(quiz)"><i>Quiz</i> - @quiz.QuizTitle</Button>

                                    </div>
                            }
                        </Content>
                    </AccordionItem>
                }


            }

        </Accordion>

    </div>

</div>

@code {
    [Parameter]
    public int EnrollmentID { get; set; }

    public StudentCourseDTO? studentCourse;
    public Lesson selectedLesson = new Lesson();
    public Module selectedModule = new Module();
    public List<QuestionnaireDTO>? quesionnaire;
    public Quiz selectedQuiz = new Quiz();

    public String? lessonTitle;
    public String? testString;
    public Boolean DisplayLesson { get; set; } = true;

    private void setSelectedModule(int LessonNumber)
    {
        Boolean moduleFound = false;
        foreach (Module module in studentCourse.Modules)
        {
            foreach (Lesson lesson in module.Lessons)
            {
                if (lesson.LessonNumber == LessonNumber)
                {
                    selectedModule = module;
                    moduleFound = true;
                    break;
                }
            }

            if (moduleFound)
            {
                break;
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await EffizyService.SetMissingLessonProgress(EnrollmentID);
        studentCourse = await EffizyService.GetStudentCourse(EnrollmentID);
        selectedLesson = studentCourse.Modules.First().Lessons.First();
        setSelectedModule(selectedLesson.LessonNumber);
        lessonTitle = studentCourse.Modules.First().Lessons.First().Title;
    }



    public async Task UpdateLesson(Lesson lesson)
    {
        selectedLesson = lesson;
        setSelectedModule(lesson.LessonNumber);
        DisplayLesson = true;

        await JsRuntime.InvokeVoidAsync("loadVideo");
    }

    public void selectQuiz(Quiz quiz)
    {
        DisplayLesson = false;
        selectedQuiz = quiz;
        quesionnaire = EffizyService.GetQuestionnaire(quiz.Id);
    }
}
