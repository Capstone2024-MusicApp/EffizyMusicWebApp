@page "/lessons/{ModuleID:int}"
@using EffizyMusicSystem.Models
@using EffizyMusicSystem.Utils
@using EffizyMusicWebApp.Components.Shared
@inject EffizyMusicSystem.Services.IEffizyMusicApplicationService EffizyService
@inject NavigationManager NavService
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore

<h3 class="text-center">Lessons List</h3>
<hr />
@if (LessonList == null)
{
    <p class="text-center"><em>Loading...</em></p>
}
else
{
    <div class="mb-3">
        <a href='/AddLesson/@ModuleID' class="btn btn-primary" role="button">
            <Icon Name="IconName.PersonAdd"></Icon>
        </a>
    </div>   
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>Lesson Number</th>
                <th>Lesson Title</th>
                <th>Lesson Mode</th>
                <th>Lesson Order</th>
                <th>Lesson Content</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var lesson in GetItemsOnCurrentPage())
            {
                <tr>
                    <td>@lesson.LessonNumber</td>
                    <td>@lesson.Title</td>
                    <td>@lesson.LessonMode</td>
                    <td>@lesson.LessonOrder</td>
                    <td>
                        @if (lesson.LessonContent != null)
                        {
                            @*  var base64 = Convert.ToBase64String(lesson.LessonContent);
                var src = $"data:video/mp4;base64,{base64}";
                @*  <video controls>
                <source src="data:video/mp4;base64,@(Convert.ToBase64String(lesson.LessonContent))" type="video/mp4" />
                Your browser does not support the video tag.
                </video>
                <video controls width="400px" height="300px">
                <source src="@src" type="video/mp4" />
                Your browser does not support the video tag.
                </video> *@
                            @* FileName *@
                            @lesson.LessonFileName
                        }
                        else
                        {
                            <p>No video attached.</p>
                        }
                    </td>
                    <td>                       
                        <a href='/EditLesson/@ModuleID/@lesson.LessonNumber' class="btn btn-warning" role="button">
                            <Icon Name="IconName.PencilSquare"></Icon>
                        </a>
                        @* <button class="btn btn-danger" role="button"> Delete</button> *@
                    </td>
                </tr>
            }
        </tbody>

    </table>
}
<PaginationComponent CurrentPage="@cp"
                     TotalPages="@TotalPages"
                     onPageChange="@HandlePageChange" />

@code {
    [Parameter]
    public int ModuleID { get; set; }
    protected List<Lesson> LessonList = new();
    private int pageSize = 4;
    private int cp = 1;
    private int TotalPages => (int)Math.Ceiling((double)LessonList.Count / pageSize);

    protected override async Task OnInitializedAsync()
    {
        // Populate items with your data asynchronously
        User user = ((await ProtectedSessionStore.GetAsync<User>("User")).Value ?? new User());
        // var UserID = ProtectedSessionStore.GetAsync<int>("UserID");
        if (user.UserID == 0 || user.UserTypeID == Constants.UserType_Student)
        {
            NavService.NavigateTo("/NotAuthorize/");
        }
        LessonList = await EffizyService.GetModuleLessons(ModuleID);
    }

    private IEnumerable<Lesson> GetItemsOnCurrentPage()
    {
        int startIndex = (cp - 1) * pageSize;
        return LessonList.Skip(startIndex).Take(pageSize);
    }

    private void HandlePageChange(int newPage)
    {
        cp = newPage;
    }
}