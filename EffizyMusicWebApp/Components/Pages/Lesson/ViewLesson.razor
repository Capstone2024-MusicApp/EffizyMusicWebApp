@page "/ViewLesson"
@using EffizyMusicSystem.Models
@inject EffizyMusicSystem.Services.IEffizyMusicApplicationService EffizyService
@inject NavigationManager NavService
<h3>Lessons List</h3>

@if (LessonList == null)
{
    <p class="text-center"><em>Loading...</em></p>
}
<table class="table table-striped align-middle table-bordered">
    <thead class="table-success">
        <tr>
            <th>Lesson Number</th>
            <th>Lesson Title</th>
            <th>Lesson Mode</th>
            <th>Lesson Content</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var lesson in PaginatedLessons)
        {
            <tr>
                <td>@lesson.LessonNumber</td>
                <td>@lesson.Title</td>
                <td>@lesson.LessonMode</td>
                <td>
                    @if (lesson.LessonContent != null)
                    {
                        <video controls>
                            <source src="data:video/mp4;base64,@(Convert.ToBase64String(lesson.LessonContent))" type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    }
                    else
                    {
                        <p>No video available.</p>
                    }
                </td>
                <td>
                    <a href='/EditLesson/@lesson.LessonNumber' class="btn btn-warning" role="button">
                        <Icon Name="IconName.PencilSquare"></Icon> Edit
                    </a>
                    <button class="btn btn-danger" role="button"> Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@* <Pagination CurrentPage="@CurrentPage"
            PageSize="@PageSize"
            TotalItems="@TotalItems"
            OnPageChanged="HandlePageChange" /> *@

@code {

    private int PageSize { get; set; } = 5;
    private int CurrentPage { get; set; } = 1;
    private int TotalItems { get; set; } = 0;
    public List<Lesson> LessonList { get; set; } = new();
    public List<Lesson> PaginatedLessons { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        LessonList = await EffizyService.GetLessons();
        TotalItems = LessonList.Count;
        Paginate();
    }

    private void Paginate()
    {
        PaginatedLessons = LessonList.Skip((CurrentPage - 1) * PageSize).Take(PageSize).ToList();
    }

    private async Task HandlePageChange(int newPage)
    {
        CurrentPage = newPage;
        Paginate();
        StateHasChanged(); // Ensure the UI is updated after pagination
    }
}
