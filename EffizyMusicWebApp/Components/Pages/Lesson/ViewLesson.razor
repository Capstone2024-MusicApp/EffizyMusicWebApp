@page "/ViewLesson"
@using EffizyMusicSystem.Models
@inject EffizyMusicSystem.Services.IEffizyMusicApplicationService EffizyService
@inject NavigationManager NavService
@rendermode InteractiveServer
<h3 class="text-center">Lessons List</h3>
<hr />
@if (items == null)
{
    <p class="text-center"><em>Loading...</em></p>
}
<table class="table table-striped align-middle table-bordered">
    <thead class="table-success">
        <tr>
            <th>Lesson Number</th>
            <th>Lesson Title</th>
            <th>Lesson Mode</th>
            <th>Lesson Content</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var lesson in GetItemsOnCurrentPage())
        {
            <tr>
                <td>@lesson.LessonNumber</td>
                <td>@lesson.Title</td>
                <td>@lesson.LessonMode</td>
                <td>
                    @if (lesson.LessonContent != null)
                    {
                        <video controls>
                            <source src="data:video/mp4;base64,@(Convert.ToBase64String(lesson.LessonContent))" type="video/mp4" />
                            Your browser does not support the video tag.
                        </video>
                    }
                    else
                    {
                        <p>No video available.</p>
                    }
                </td>
                <td>
                    <a href='/EditLesson/@lesson.LessonNumber' class="btn btn-warning" role="button">
                        <Icon Name="IconName.PencilSquare"></Icon> Edit
                    </a>
                    <button class="btn btn-danger" role="button"> Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@* <Pagination CurrentPage="@currentPage" TotalPages="@TotalPages" OnPageChange="HandlePageChange" /> *@

<nav aria-label="Page-navigation" class="d-flex justify-content-center">
    <ul class="pagination">
        <li class="page-item @((currentPage == 1) ? "disabled" : "")">
            <button class="page-link" @onclick="PreviousPage">Previous</button>
        </li>
        @for (int i = 1; i <= TotalPages; i++)
        {
            var pageNumber = i; // Capture the current value of i
            <li class="page-item @(i == currentPage ? "active" : "")">
                <button class="page-link" @onclick="(() => GoToPage(pageNumber))">@i</button>
            </li>
        }
        <li class="page-item @((currentPage == TotalPages) ? "disabled" : "")">
            <button class="page-link" @onclick="NextPage">Next</button>
        </li>
    </ul>
</nav>

@code {
    private List<Lesson> items = new();
    private int pageSize = 4;
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        // Populate items with your data asynchronously
        items = await EffizyService.GetLessons();
    }

    private IEnumerable<Lesson> GetItemsOnCurrentPage()
    {
        int startIndex = (currentPage - 1) * pageSize;
        return items.Skip(startIndex).Take(pageSize);
    }

    private bool IsFirstPage => currentPage == 1;
    private bool IsLastPage => currentPage == TotalPages;

    private int TotalPages => (int)Math.Ceiling((double)items.Count / pageSize);

    private void PreviousPage()
    {
        if (!IsFirstPage)
        {
            currentPage--;
        }
    }

    private void NextPage()
    {
        if (!IsLastPage)
        {
            currentPage++;
        }
    }

    private void GoToPage(int page)
    {
        currentPage = page;
        StateHasChanged();
    }

}