@page "/registrationForm"
@using EffizyMusicSystem.Controllers
@using EffizyMusicSystem.Services
@using Microsoft.AspNetCore.Components.Forms
@using EffizyMusicSystem.Models

<EditForm Model="@user" OnValidSubmit="SubmitForm">
    <DataAnnotationsValidator />

    <label for="Email">Email:</label>
    <InputText id="Email" @bind-Value="user.Email" />
    <ValidationMessage For="@(() => user.Email)" />

    <label for="Password">Password:</label>
    <InputText id="Password" @bind-Value="user.Password" type="password" />
    <ValidationMessage For="@(() => user.Password)" />

    <label for="ConfirmPassword">Confirm Password:</label>
    <InputText id="ConfirmPassword" @bind-Value="user.ConfirmPassword" type="password" />
    <ValidationMessage For="@(() => user.ConfirmPassword)" />

    <label for="FirstName">First Name:</label>
    <InputText id="FirstName" @bind-Value="user.FirstName" />
    <ValidationMessage For="@(() => user.FirstName)" />

    <label for="LastName">Last Name:</label>
    <InputText id="LastName" @bind-Value="user.LastName" />
    <ValidationMessage For="@(() => user.LastName)" />

    <label for="Gender">Gender:</label>
    <InputSelect id="Gender" @bind-Value="user.Gender">
        <option value="Male">Male</option>
        <option value="Female">Female</option>
        <option value="Other">Other</option>
    </InputSelect>
    <ValidationMessage For="@(() => user.Gender)" />

    <label for="UserType">User Type:</label>
    <InputSelect id="UserType" @bind-Value="user.UserTypeID">
        @foreach (var userType in userTypes)
        {
            <option value="@userType.UserTypeID">@userType.Description</option>
        }
    </InputSelect>
    <ValidationMessage For="@(() => user.UserTypeID)" />

    <button type="submit">Next</button>
</EditForm>

@code {
    private User user = new User();

    [Inject]
    IUserService userService { get; set; }

    enum RegistrationStep
    {
        UserType,
        Student,
        Instructor
    }

    RegistrationStep currentStep = RegistrationStep.UserType;

    private List<UserType> userTypes = new List<UserType>
    {
        new UserType { UserTypeID = 1, Description = "Student" },
        new UserType { UserTypeID = 2, Description = "Instructor" }
    };

    //[Inject]
   // private UserService userService { get; set; }

    private async Task CreateUser()
    {
        await userService.CreateUserAsync(user);
    }
    private void SubmitForm()
    {
        // Handle student form submission here
        // For example, save the student to the database using UserService
        // userService.RegisterStudentAsync(student);
        // Then redirect to payment form
        // NavigationManager.NavigateTo("/payment-form");
    }
}
