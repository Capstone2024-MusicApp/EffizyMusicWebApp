@page "/modules/{CourseId:int}"

@using EffizyMusicSystem.DAL
@using EffizyMusicSystem.Models
@inject EffizyMusicSystem.Services.EffizyMusicApplicationService EffizyService

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager
<h3>Modules</h3>

<br />
@if (UserTypeID == 3)
{
    <div class="alert alert-danger" role="alert">
        You have no rights to see modules.
    </div>
}
else
{
    @if (moduleList == null)
    {
        <p><em>No Record Found</em></p>
    }
    else
    {
        <div class="mb-3">
            <a href="/AddModule" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Module
            </a>
        </div>
     <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
               @*  <th>ID</th> *@
                <th>Module Name</th>
                <th>Module Order</th>
                @* <th>Description</th> *@
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var module in GetItemsOnCurrentPage())
            {
                <tr>
                    @* <td>@module.ModuleID</td> *@
                    <td>@module.Title</td>
                    <td>@module.ModuleOrder</td>
                   
                    @* <td>@module.Description</td> *@
                    <td>
                        
                        <a href='/module/edit/@module.ModuleID' class="btn btn-primary" role="button">
                            Edit
                        </a>
                        <a href='/module/delete/@module.ModuleID' class="btn btn-warning" role="button">
                            Delete
                        </a>
                        <a href='/quizes/@module.ModuleID' class="btn btn-outline-dark" role="button">
                            Quizes
                        </a>
                        <a href='/lessons/@module.ModuleID' class="btn btn-outline-dark" role="button">
                            Lessons
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    }
 }
<PaginationComponent CurrentPage="@cp"
                     TotalPages="@TotalPages"
                     onPageChange="@HandlePageChange" />
@code {
    [Parameter]
    public int CourseId { get; set; }
    public int UserTypeID = 0;
    protected List<EffizyMusicSystem.Models.Module> moduleList = new();
    private int pageSize = 4;
    private int cp = 1;
    private int TotalPages => (int)Math.Ceiling((double)moduleList.Count / pageSize);
   
    protected override async Task OnInitializedAsync()
    {
        bool isLogin = await IsUserLogin();
        if (isLogin == false)
        {
            NavigationManager.NavigateTo("/loginForm", true);
            return;
        }
        var UserType = await ProtectedSessionStore.GetAsync<int>("UserTypeID");
        UserTypeID = UserType.Value;

        moduleList = await EffizyService.GetModulesByCourseID(CourseId);
        //await GetModules();
    }
    private IEnumerable<EffizyMusicSystem.Models.Module> GetItemsOnCurrentPage()
    {
        int startIndex = (cp - 1) * pageSize;
        return moduleList.Skip(startIndex).Take(pageSize);
    }

    private void HandlePageChange(int newPage)
    {
        cp = newPage;
    }

    protected async Task<bool> IsUserLogin()
    {
        var email = await ProtectedSessionStore.GetAsync<String>("Email");
        if (email.Value != null)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    // protected async Task GetModules()
    // {
    //     string apiUrl = "https://localhost:7164/api/Modules/";
    //     moduleList = await Http.GetFromJsonAsync<List<Module>>(apiUrl);
    // }
}