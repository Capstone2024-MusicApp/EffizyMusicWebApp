@page "/AddModule/"
@using EffizyMusicSystem.Models
@inject EffizyMusicSystem.Services.IEffizyMusicApplicationService EffizyService
@inject NavigationManager NavService
<h3>Add Module</h3>

<EditForm FormName="Submit-Module" method="post" Model="@ModuleData" OnValidSubmit="SaveModuleInfo" class="form mt-4">
    
   

    <div class="form-outline mt-2 col-md-6">
                <label for="title" class="form-label">Module Title:</label>
                <InputText @bind-Value="ModuleData.Title" class="form-control"></InputText>
            </div>            
  
    <div class="form-outline mt-2 col-md-6">
        <label for="course" class="form-label">Choose Course:</label>
        <InputSelect class="form-control" @bind-Value="ModuleData.Course" required>
            <option value="">[Please Choose the Course...]</option>

            @foreach (var course in CourseList)
            {
                <option value="@course.CourseID">@course.CourseDescription (CourseMode : @course.CourseMode)</option>
            }
        </InputSelect>
        @* <ValidationMessage For="@(() => ModuleData.Course.CourseDescription)" class="row" /> *@
    </div>


    @* <div class="form-outline mt-2 col-md-6">
        <label for="title" class="form-label">Module ID:</label>
        <InputNumber @bind-Value="ModuleData.ModuleID" class="form-control"></InputNumber>
    </div> *@


    <button type="submit" class="btn btn-primary mt-4"><i class="fa fa-plus-square" aria-hidden="true"></i>  Add Module</button>
</EditForm>

@* @if (!IsModuleAdded)
{
    <p class="text-center text-danger"><em>@ErrorMessage</em></p>
} *@

@code {
    [SupplyParameterFromForm]
    public Module ModuleData { get; set; } = new();

    [Parameter]
    public int CourseId { get; set; }
    public List<Course> CourseList = new();

    [Parameter]
    public bool IsModuleAdded { get; set; } = false;

    [Parameter]
    public string ErrorMessage { get; set; } = "";
    protected override void OnInitialized()
    {
        CourseList = EffizyService.GetCourseList();
    }
    protected override void OnParametersSet()
    {
        ModuleData.Course.CourseID = CourseId;
    }
    private async Task SaveModuleInfo()
    {
        try
        {
            IsModuleAdded = await EffizyService.AddModules(ModuleData);
            if (IsModuleAdded)
            {
                NavService.NavigateTo("~/Modules/");
                ResetForm();
            }
            else
            {
                ErrorMessage = "Error in Adding Lesson";
            }
        }
        catch(Exception ex)
        {
           
        }

    }
    private void ResetForm()
    {
        ModuleData = new();
    }
}
